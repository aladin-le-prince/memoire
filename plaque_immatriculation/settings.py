"""
Django settings for plaque_immatriculation project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# ------------------------------------------------------------------------
# üìå Construction des chemins √† l'int√©rieur du projet
# ------------------------------------------------------------------------

# Base du projet (r√©pertoire racine)
BASE_DIR = Path(__file__).resolve().parent.parent

# ------------------------------------------------------------------------
# üìå S√©curit√© et configuration de base
# ------------------------------------------------------------------------

# ‚ö†Ô∏è Cl√© secr√®te pour le chiffrement (changer en production !)
SECRET_KEY = 'django-insecure-3(*u!^)*-b$co!nf#d*22f@o1^8vpiq_at-gnj@x+!63(y3^(n'

# ‚ö†Ô∏è D√©sactiver DEBUG en production !
DEBUG = True

# D√©finition des h√¥tes autoris√©s (mettre le domaine en production)
ALLOWED_HOSTS = ["127.0.0.1", "localhost"]

# ------------------------------------------------------------------------
# üìå Applications Django
# ------------------------------------------------------------------------

INSTALLED_APPS = [
    'rootvibe',  # üü¢ Application principale de ton projet
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

# ------------------------------------------------------------------------
# üìå Middlewares (Gestion de la s√©curit√© et des requ√™tes)
# ------------------------------------------------------------------------

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# ------------------------------------------------------------------------
# üìå URL racine de l'application
# ------------------------------------------------------------------------

ROOT_URLCONF = 'plaque_immatriculation.urls'

# ------------------------------------------------------------------------
# üìå Configuration des templates
# ------------------------------------------------------------------------

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # üìÇ R√©pertoire des templates personnalis√©s
        'APP_DIRS': True,  # üìå Recherche aussi les templates dans les applications install√©es
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.i18n',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'django.template.context_processors.tz',
                'django.contrib.messages.context_processors.messages',
                'rootvibe.context_processors.user_groups',  # ‚ö° Ajout du context processor personnalis√©
            ],
        },
    },
]

# ------------------------------------------------------------------------
# üìå Configuration WSGI (Serveur Web)
# ------------------------------------------------------------------------

WSGI_APPLICATION = 'plaque_immatriculation.wsgi.application'

# ------------------------------------------------------------------------
# üìå Base de donn√©es
# ------------------------------------------------------------------------

# ‚ö†Ô∏è SQLite utilis√© pour le d√©veloppement (remplacer par PostgreSQL en production)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# ------------------------------------------------------------------------
# üìå Validation des mots de passe (s√©curit√©)
# ------------------------------------------------------------------------

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# ------------------------------------------------------------------------
# üìå Param√®tres r√©gionaux et fuseau horaire
# ------------------------------------------------------------------------

# üåç Langue et fuseau horaire
LANGUAGE_CODE = 'fr-fr'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# ------------------------------------------------------------------------
# üìå Fichiers statiques et m√©dias (CSS, JS, images, uploads)
# ------------------------------------------------------------------------

# üìÅ Gestion des fichiers statiques
STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR,  'rootvibe','static')]
 # üìå Dossier o√π Django cherche les fichiers statiques
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # üìå Dossier utilis√© pour collecter tous les fichiers statiques en production

# üìÅ Gestion des fichiers m√©dias (uploads des utilisateurs)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# ------------------------------------------------------------------------
# üìå Gestion des utilisateurs et authentification
# ------------------------------------------------------------------------

# ‚ö° Utilisation d'un mod√®le utilisateur personnalis√©
AUTH_USER_MODEL = 'rootvibe.User'

# üìå Configuration des URLs d'authentification
LOGIN_URL = 'login'  # Page de connexion
LOGIN_REDIRECT_URL = "/home/"  # Page apr√®s connexion
LOGOUT_REDIRECT_URL = 'login'  # Page apr√®s d√©connexion

# ------------------------------------------------------------------------
# üìå S√©curit√© et protection CSRF
# ------------------------------------------------------------------------

# üîí S√©curisation des sessions et des cookies
SESSION_ENGINE = "django.contrib.sessions.backends.db"
SESSION_COOKIE_AGE = 86400  # üïí 1 jour (en secondes)
SESSION_SAVE_EVERY_REQUEST = True
SESSION_COOKIE_SECURE = False  # ‚ö†Ô∏è Mettre sur True en production avec HTTPS
CSRF_COOKIE_SECURE = False  # ‚ö†Ô∏è Mettre sur True en production avec HTTPS
CSRF_USE_SESSIONS = True  # üîí Stocke le token CSRF dans la session utilisateur

# üìå Pour √©viter l'erreur CSRF (ex: lors de connexions locales)
CSRF_TRUSTED_ORIGINS = ["http://127.0.0.1:8000", "http://localhost:8000"]

# ------------------------------------------------------------------------
# üìå Configuration des mod√®les
# ------------------------------------------------------------------------

# üîπ Cl√© par d√©faut pour les nouveaux mod√®les de la base de donn√©es
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
